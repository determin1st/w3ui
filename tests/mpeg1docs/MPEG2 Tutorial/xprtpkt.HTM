<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<HTML>

<HEAD>
	<META HTTP-EQUIV="Content-Type" CONTENT="text/html;CHARSET=iso-8859-1">
<META NAME="VPSiteProject" CONTENT="file:///C|/Bretl%20Site%20copy/BretlSite.vpp">
<meta name="formatter" content = "HyperText Studio from Olson Software (http://www.olsonsoft.com)">

	<META NAME="GENERATOR" Content="Visual Page 2.0 for Windows">
	<TITLE>Transport Packets </TITLE>

	<STYLE TYPE="text/css">
	<!--
	P	 {
			
		}
	H1	 {
			
		}
	H2	 {
			
		}
	H3	 {
			
		}
	H4	 {
			
		}
	H5	 {
			
		}
	H6	 {
			
		}
	BODY	 {
			
		}
	.DefaultParagraphFont	 {
			
		}
	-->
	</STYLE>

</HEAD>

<BODY>

<BANNER>
<P><SPAN CLASS="DefaultParagraphFont"><B><SPAN STYLE="Font-Size : 16pt"><FONT FACE="Arial">Transport Packets</FONT></SPAN></B></SPAN></P>
</BANNER>
<P><SPAN CLASS="DefaultParagraphFont"><SPAN STYLE="Font-Size : 10pt"><FONT FACE="Arial">MPEG packages all data
into fixed-size 188-byte packets for transport.</FONT></SPAN></SPAN></P>

<P>&nbsp;</P>

<P><SPAN CLASS="DefaultParagraphFont"><SPAN STYLE="Font-Size : 10pt"><FONT FACE="Arial">Video or audio payload
data may have already been placed in PES packets before it is broken up into fixed length transport packet payloads.
&nbsp;A PES packet may be much longer than a transport packet. &nbsp;When segmenting the PES packet for placement
in transport packet payloads, the PES header is always placed immediately following a transport header. &nbsp;Successive
portions of the PES packet are then placed in the payloads of transport packets. &nbsp;Remaining space in the final
transport packet payload is filled with stuffing bytes = 0xFF (all ones).</FONT></SPAN></SPAN></P>

<P>&nbsp;</P>

<P><SPAN CLASS="DefaultParagraphFont"><SPAN STYLE="Font-Size : 10pt"><FONT FACE="Arial">Each transport packet starts
with a sync byte = 0x47. &nbsp;In the ATSC US terrestrial DTV VSB transmission system, this byte is not processed,
but is replaced by a different sync symbol especially suited to RF transmission. &nbsp;</FONT></SPAN></SPAN></P>

<P>&nbsp;</P>

<P><SPAN CLASS="DefaultParagraphFont"><SPAN STYLE="Font-Size : 10pt"><FONT FACE="Arial">Among other data, the transport
packet header contains a 13-bit PID (packet ID), which corresponds to a particular elementary stream of video,
audio, or other program element. &nbsp;PID 0x0000 is reserved for transport packets carrying a program association
table (PAT). &nbsp;The PAT points to a Program Map Table (PMT), which in turn points to particular elements of
a program. Demultiplexing a transport stream thus involves:</FONT></SPAN></SPAN></P>

<P><SPAN CLASS="DefaultParagraphFont"><SPAN STYLE="Font-Size : 10pt"><FONT FACE="Arial">1) finding the PAT by selecting
packets with PID = 0x0000</FONT></SPAN></SPAN></P>

<P><SPAN CLASS="DefaultParagraphFont"><SPAN STYLE="Font-Size : 10pt"><FONT FACE="Arial">2) reading the PIDs for
the PMTs </FONT></SPAN></SPAN></P>

<P><SPAN CLASS="DefaultParagraphFont"><SPAN STYLE="Font-Size : 10pt"><FONT FACE="Arial">3) reading the PIDs for
the elements of a desired program from its PMT (for example, a basic program will have a PID for audio and a PID
for video)</FONT></SPAN></SPAN></P>

<P><SPAN CLASS="DefaultParagraphFont"><SPAN STYLE="Font-Size : 10pt"><FONT FACE="Arial">4) detecting packets with
the desired PIDs and routing them to the decoders</FONT></SPAN></SPAN></P>

<P><A HREF="pktdiag.HTM">Next:Transport Packet Diagram</A></P>

<P><A HREF="dataxprt.HTM">Up to MPEG 2 Data Transport</A> &nbsp;&nbsp;&nbsp;&nbsp;</P>

<P>&nbsp;

</BODY>

</HTML>