<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<html>
<head>

	<META NAME="VPSiteProject" CONTENT="file:///C|/Bretl%20Site%20copy/BretlSite.vpp"><meta name="generator" content = "HyperText Studio from Olson Software (http://www.olsonsoft.com)">
<meta name="formatter" content = "HyperText Studio from Olson Software (http://www.olsonsoft.com)">
<title>Introduction to MPEG 2 Video Compression</title>
<style><!-- body { }
H1{}
H6{}
H5{}
H3{}
H2{}
P{}
H4{}
.DefaultParagraphFont{}
 --></style>
</head>
<body>
<BANNER>

<p><font size="5" face="Arial"><span class="DefaultParagraphFont" style="font-size: 16pt;"><b>Introduction to MPEG 2 Video Compression</b></span></font><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"></span></font></p></BANNER>

<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The international standard </span></font><a href="MPEGstds.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">ISO/IEC 13818-2 &quot;Generic Coding of Moving Pictures and Associated Audio Information: Video&quot;</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">, and </span></font><a href="ATSCstds.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">ATSC document A/54 &quot;Guide to the Use of the ATSC Digital Television Standard&quot;</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> describe a system , known as MPEG-2, for encoding and decoding digital video data. Digital video data is encoded as a series of code words in a complicated manner that causes the average length of the code words to be much smaller than would be the case, if for example, each pixel in every frame was coded as an 8 bit value. This is also known as data compression. The standard allows for the encoding of video over a wide range of resolutions, including higher resolutions commonly known as HDTV.</span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">In this system, encoded pictures are made up of pixels. Each 8x8 array of pixels is known as a </span></font><a href="block.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">block</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">. A 2x2 array of blocks is termed a </span></font><a href="macroblk.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">macroblock</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">. Compression is achieved using the well known techniques of </span></font><a href="mpredic.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">prediction</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> (</span></font><a href="motcomp.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">motion estimation</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> in the encoder, motion compensation in the decoder), 2 dimensional </span></font><a href="DCxfrm.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">discrete cosine transform</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> (DCT) performed on 8x8 blocks of pixels, </span></font><a href="quantiz.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">quantization</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> of DCT coefficients, and </span></font><a href="huffRL.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Huffman and run/level coding</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">. </span></font><a href="picture.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Pictures</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> called </span></font><a href="index111.HTM" target="popup"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">I pictures</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> are encoded without prediction. Pictures termed </span></font><a href="index114.HTM" target="popup"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">P pictures</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> may be encoded with prediction from previous pictures. </span></font><a href="index98.HTM" target="popup"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">B pictures</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> may be encoded using prediction from both previous and subsequent pictures. A simplified MPEG-2 encoder and decoder are shown in the </span></font><a href="codecdia1.HTM" target="graphics"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">MPEG Coder/Decoder Diagram</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">.</span></font></p>
<p>&nbsp;</p>
<p><font size="5" face="Arial"><span class="DefaultParagraphFont" style="font-size: 14pt;"><b>Encoding:</b></span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The encoding process for P and B pictures is explained as follows. </span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Data representing </span></font><a href="macroblk.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">macroblocks</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> of pixel values for a picture to be encoded are fed to both the subtractor and the motion estimator. The motion estimator compares each of these new macroblocks with macroblocks in a previously stored reference picture or pictures. It finds the macroblock in the reference picture that most closely matches the new macroblock. The motion estimator then calculates a </span></font><a href="mpredic.HTM" target="popup"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">motion vector</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> (mv) which represents the horizontal and vertical displacement from the macroblock being encoded to the matching macroblock-sized area in the reference picture . Note that the motion vectors have 1/2 pixel resolution achieved by linear interpolation between adjacent pixels. </span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The motion estimator also reads this matching macroblock (known as a predicted macroblock) out of the reference picture memory and sends it to the subtractor which subtracts it, on a pixel by pixel basis, from the new macroblock entering the encoder. This forms a </span></font><a href="index106.HTM" target="popup"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">error prediction</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> or residual signal that represents the difference between the predicted macroblock and the actual macroblock being encoded. This residual is often very small. </span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The residual is transformed from the spatial domain by a 2 dimensional </span></font><a href="index100.HTM" target="popup"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">DCT</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">.</span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">(The two dimensional DCT consists of separable vertical and horizontal one-dimensional DCTs.) The DCT coefficients of the residual are then quantized in a process that reduces the number of bits needed to represent each coefficient. Usually many coefficients are effectively quantized to 0. </span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The quantized DCT coefficients are </span></font><a href="huffRL.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Huffman run/level coded</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> which further reduces the average number of bits per coefficient. This is combined with motion vector data and other </span></font><a href="index123.HTM" target="popup"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">side information</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> (including an indication of I, P or B picture) and sent to the decoder. </span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">For the case of P pictures, the quantized DCT coefficients also go to an internal loop that represents the operation of the decoder (a decoder within the encoder). The residual is inverse quantized and inverse DCT transformed. The predicted macroblock read out of the reference picture memory is added back to the residual on a pixel by pixel basis and stored back into memory to serve as a reference for predicting subsequent pictures. The object is to have the data in the reference picture memory of the encoder match the data in the reference picture memory of the decoder. B pictures are not stored as reference pictures.</span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The encoding of I pictures uses the same circuit, however no motion estimation occurs and the (-) input to the subtractor is forced to 0. In this case the quantized DCT coefficients represent transformed pixel values rather than residual values as was the case for P and B pictures. As is the case for P pictures, decoded I pictures are stored as reference pictures.</span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The system can encode sequences of progressive or interlaced pictures. For interlaced sequences, pictures may be encoded &nbsp;as field pictures or as frame pictures. For progressive sequences, all pictures are frame pictures with frame DCT coding and frame prediction. Further explanation is found in </span></font><a href="fldfrm.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Field DCT Coding and Frame DCT Coding</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">.</span></font></p>
<p>&nbsp;</p>
<p><font size="5" face="Arial"><span class="DefaultParagraphFont" style="font-size: 14pt;"><b>Decoding:</b></span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The decoding process can be thought of as the reverse of the encoding process. Refer to the </span></font><a href="codecdia1.HTM" target="graphics"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">MPEG Coder/Decoder Diagram</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">.</span></font></p>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">The received encoded data is </span></font><a href="huffRL.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Huffman/run-level</span></font></a><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;"> decoded. Motion vectors are parsed from the data stream and fed to the motion compensator. Quantized DCT coefficients are fed to the inverse quantizer and then to an IDCT circuit that transforms them back to the spatial domain. For P and B pictures, motion vector data is translated to a memory address &nbsp;by the motion compensator to read a particular macroblock (predicted macroblock) out of a previously stored reference picture. The adder adds this prediction &nbsp;to the residual to form reconstructed picture data. For I pictures, there are no motion vectors and no reference picture, so the prediction is forced to zero. For I and P pictures, the adder output it is fed back to be stored as a reference picture for future predictions.</span></font></p>
<p>&nbsp;</p>
<H2 class="Heading2">MPEG 2 Video Compression topics:</H2>
<p><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Introduction to MPEG 2 Video Compression (this page)</span></font></p>
<p><a href="codecdia1.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">MPEG Coder/Decoder Diagram</span></font></a></p>
<p><a href="profiles.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Profiles and Levels</span></font></a></p>
<p><a href="pixtypes.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Frames, Fields, Pictures (I, P, B)</span></font></a></p>
<p><a href="reorder.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">I P B Picture Reordering</span></font></a></p>
<p><a href="pixpos.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Pixel Positioning</span></font></a></p>
<p><a href="VCtools.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">Compression tools</span></font></a></p>
<p><a href="vidstruc.HTM"><font size="3" face="Arial"><span class="DefaultParagraphFont" style="font-size: 10pt;">MPEG 2 Video Data Structures</span></font></a></p></body>
</html>
