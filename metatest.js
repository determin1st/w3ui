// Generated by LiveScript 1.6.0
var metaconstruct, lolconstruct, A, a, b;
metaconstruct = function(props){
  var a, b, c;
  a = -1;
  b = props.length;
  c = '';
  while (++a < b) {
    c += 'this.' + props[a] + '=null;';
  }
  return eval('(function(){' + c + '})');
};
lolconstruct = function(props){
  return function(){
    var i$, ref$, len$, prop;
    for (i$ = 0, len$ = (ref$ = props).length; i$ < len$; ++i$) {
      prop = ref$[i$];
      this[prop] = null;
    }
  };
};
A = metaconstruct(['p1', 'p2', 'p3']);
a = new A();
b = new A();
console.log(a === b);
console.log(a instanceof A);
console.log(b instanceof A);
console.log(a instanceof b.constructor);
A = lolconstruct(['p1', 'p2', 'p3']);
a = new A();
b = new A();
console.log(a === b);
console.log(a instanceof A);
console.log(b instanceof A);
console.log(a instanceof b.constructor);
console.log('=============================');
metaconstruct = function(){
  var map, lolconstruct;
  map = new WeakMap();
  lolconstruct = function(props){
    return function(){
      var i$, ref$, len$, prop;
      for (i$ = 0, len$ = (ref$ = props).length; i$ < len$; ++i$) {
        prop = ref$[i$];
        this[prop] = null;
      }
    };
  };
  return function(props){
    var a;
    if (!(a = map.get(props))) {
      map.set(props, a = lolconstruct(props));
    }
    return a;
  };
}();
A = ['p1', 'p2', 'p3'];
a = new (metaconstruct(A))();
b = new (metaconstruct(A))();
console.log(a instanceof b.constructor);
console.log(b instanceof a.constructor);
console.log(b instanceof metaconstruct(A));
a = new (lolconstruct(A))();
b = new (lolconstruct(A))();
console.log(a instanceof b.constructor);
console.log(b instanceof a.constructor);
console.log(b instanceof lolconstruct(A));